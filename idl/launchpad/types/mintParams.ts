/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU8Decoder,
  getU8Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

/**
 * Represents the parameters for initializing a new token mint
 * # Fields
 * * `decimals` - Number of decimal places for the token
 * * `name` - Name of the token
 * * `symbol` - Symbol/ticker of the token
 * * `uri` - URI pointing to token metadata
 */

export type MintParams = {
  decimals: number;
  name: string;
  symbol: string;
  uri: string;
};

export type MintParamsArgs = MintParams;

export function getMintParamsEncoder(): Encoder<MintParamsArgs> {
  return getStructEncoder([
    ['decimals', getU8Encoder()],
    ['name', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['symbol', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['uri', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
  ]);
}

export function getMintParamsDecoder(): Decoder<MintParams> {
  return getStructDecoder([
    ['decimals', getU8Decoder()],
    ['name', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['symbol', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['uri', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
  ]);
}

export function getMintParamsCodec(): Codec<MintParamsArgs, MintParams> {
  return combineCodec(getMintParamsEncoder(), getMintParamsDecoder());
}
