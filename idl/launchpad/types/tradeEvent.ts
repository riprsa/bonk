/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';
import {
  getPoolStatusDecoder,
  getPoolStatusEncoder,
  getTradeDirectionDecoder,
  getTradeDirectionEncoder,
  type PoolStatus,
  type PoolStatusArgs,
  type TradeDirection,
  type TradeDirectionArgs,
} from '.';

/** Emitted when trade process */
export type TradeEvent = {
  poolState: Address;
  totalBaseSell: bigint;
  virtualBase: bigint;
  virtualQuote: bigint;
  realBaseBefore: bigint;
  realQuoteBefore: bigint;
  realBaseAfter: bigint;
  realQuoteAfter: bigint;
  amountIn: bigint;
  amountOut: bigint;
  protocolFee: bigint;
  platformFee: bigint;
  shareFee: bigint;
  tradeDirection: TradeDirection;
  poolStatus: PoolStatus;
};

export type TradeEventArgs = {
  poolState: Address;
  totalBaseSell: number | bigint;
  virtualBase: number | bigint;
  virtualQuote: number | bigint;
  realBaseBefore: number | bigint;
  realQuoteBefore: number | bigint;
  realBaseAfter: number | bigint;
  realQuoteAfter: number | bigint;
  amountIn: number | bigint;
  amountOut: number | bigint;
  protocolFee: number | bigint;
  platformFee: number | bigint;
  shareFee: number | bigint;
  tradeDirection: TradeDirectionArgs;
  poolStatus: PoolStatusArgs;
};

export function getTradeEventEncoder(): FixedSizeEncoder<TradeEventArgs> {
  return getStructEncoder([
    ['poolState', getAddressEncoder()],
    ['totalBaseSell', getU64Encoder()],
    ['virtualBase', getU64Encoder()],
    ['virtualQuote', getU64Encoder()],
    ['realBaseBefore', getU64Encoder()],
    ['realQuoteBefore', getU64Encoder()],
    ['realBaseAfter', getU64Encoder()],
    ['realQuoteAfter', getU64Encoder()],
    ['amountIn', getU64Encoder()],
    ['amountOut', getU64Encoder()],
    ['protocolFee', getU64Encoder()],
    ['platformFee', getU64Encoder()],
    ['shareFee', getU64Encoder()],
    ['tradeDirection', getTradeDirectionEncoder()],
    ['poolStatus', getPoolStatusEncoder()],
  ]);
}

export function getTradeEventDecoder(): FixedSizeDecoder<TradeEvent> {
  return getStructDecoder([
    ['poolState', getAddressDecoder()],
    ['totalBaseSell', getU64Decoder()],
    ['virtualBase', getU64Decoder()],
    ['virtualQuote', getU64Decoder()],
    ['realBaseBefore', getU64Decoder()],
    ['realQuoteBefore', getU64Decoder()],
    ['realBaseAfter', getU64Decoder()],
    ['realQuoteAfter', getU64Decoder()],
    ['amountIn', getU64Decoder()],
    ['amountOut', getU64Decoder()],
    ['protocolFee', getU64Decoder()],
    ['platformFee', getU64Decoder()],
    ['shareFee', getU64Decoder()],
    ['tradeDirection', getTradeDirectionDecoder()],
    ['poolStatus', getPoolStatusDecoder()],
  ]);
}

export function getTradeEventCodec(): FixedSizeCodec<
  TradeEventArgs,
  TradeEvent
> {
  return combineCodec(getTradeEventEncoder(), getTradeEventDecoder());
}
